# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/cupch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -Ilib/GLFW/include -Ilib/GLAD/include -Ilib/GLM/include -Ilib/yaml-cpp/include -Ilib/assimp/include -Ilib/mono/include -Ilib/spdlog -Ilib/ImGui -Ilib/ImGuizmo -Ilib/stb -Ilib/Copper-Math -Ilib/physx/include/physx
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../Build/linux-x86_64-Debug/Copper-Engine
TARGET = $(TARGETDIR)/libCopper-Engine.a
OBJDIR = ../BuildInt/linux-x86_64-Debug/Copper-Engine
DEFINES += -DCU_ENGINE -DCU_EDITOR -D_CRT_SECURE_NO_WARNINGS -DGLM_ENABLE_EXPERIMENTAL -DVERSION_MAJOR=0 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION_TWEAK=2 -DSCENE_VERSION=0 -DINCLUDE_GLM -DCU_LINUX -DCU_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g `pkg-config --cflags mono-2`
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++20 `pkg-config --cflags mono-2`
LIBS += lib/GLFW/Build/linux-x86_64-Debug/libGLFW.a lib/GLAD/Build/linux-x86_64-Debug/libGLAD.a lib/ImGui/Build/linux-x86_64-Debug/libImGui.a lib/yaml-cpp/Build/linux-x86_64-Debug/libyaml-cpp.a lib/assimp/Build/linux-x86_64-Debug/libassimp.a -lopengl32.lib
LDDEPS += lib/GLFW/Build/linux-x86_64-Debug/libGLFW.a lib/GLAD/Build/linux-x86_64-Debug/libGLAD.a lib/ImGui/Build/linux-x86_64-Debug/libImGui.a lib/yaml-cpp/Build/linux-x86_64-Debug/libyaml-cpp.a lib/assimp/Build/linux-x86_64-Debug/libassimp.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 `pkg-config --libs mono-2`

else ifeq ($(config),release)
TARGETDIR = ../Build/linux-x86_64-Release/Copper-Engine
TARGET = $(TARGETDIR)/libCopper-Engine.a
OBJDIR = ../BuildInt/linux-x86_64-Release/Copper-Engine
DEFINES += -DCU_ENGINE -DCU_EDITOR -D_CRT_SECURE_NO_WARNINGS -DGLM_ENABLE_EXPERIMENTAL -DVERSION_MAJOR=0 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION_TWEAK=2 -DSCENE_VERSION=0 -DINCLUDE_GLM -DCU_LINUX -DCU_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 `pkg-config --cflags mono-2`
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++20 `pkg-config --cflags mono-2`
LIBS += lib/GLFW/Build/linux-x86_64-Release/libGLFW.a lib/GLAD/Build/linux-x86_64-Release/libGLAD.a lib/ImGui/Build/linux-x86_64-Release/libImGui.a lib/yaml-cpp/Build/linux-x86_64-Release/libyaml-cpp.a lib/assimp/Build/linux-x86_64-Release/libassimp.a -lopengl32.lib
LDDEPS += lib/GLFW/Build/linux-x86_64-Release/libGLFW.a lib/GLAD/Build/linux-x86_64-Release/libGLAD.a lib/ImGui/Build/linux-x86_64-Release/libImGui.a lib/yaml-cpp/Build/linux-x86_64-Release/libyaml-cpp.a lib/assimp/Build/linux-x86_64-Release/libassimp.a
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -m64 -s `pkg-config --libs mono-2`

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/AxisManager.o
GENERATED += $(OBJDIR)/Camera.o
GENERATED += $(OBJDIR)/Color.o
GENERATED += $(OBJDIR)/Engine.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/FileUtils.o
GENERATED += $(OBJDIR)/ImGui.o
GENERATED += $(OBJDIR)/ImGuizmo.o
GENERATED += $(OBJDIR)/InternalCalls.o
GENERATED += $(OBJDIR)/LinuxError.o
GENERATED += $(OBJDIR)/LinuxFileUtils.o
GENERATED += $(OBJDIR)/LinuxInput.o
GENERATED += $(OBJDIR)/LinuxWindow.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Math.o
GENERATED += $(OBJDIR)/MonoUtils.o
GENERATED += $(OBJDIR)/OldSceneDeserialization.o
GENERATED += $(OBJDIR)/OpenGLBuffer.o
GENERATED += $(OBJDIR)/OpenGLFrameBuffer.o
GENERATED += $(OBJDIR)/OpenGLRenderer.o
GENERATED += $(OBJDIR)/OpenGLShader.o
GENERATED += $(OBJDIR)/OpenGLTexture.o
GENERATED += $(OBJDIR)/OpenGLVertexArray.o
GENERATED += $(OBJDIR)/Path.o
GENERATED += $(OBJDIR)/Primitives.o
GENERATED += $(OBJDIR)/Registry.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/ScriptComponent.o
GENERATED += $(OBJDIR)/ScriptingCore.o
GENERATED += $(OBJDIR)/Transform.o
GENERATED += $(OBJDIR)/cupch.o
GENERATED += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/AxisManager.o
OBJECTS += $(OBJDIR)/Camera.o
OBJECTS += $(OBJDIR)/Color.o
OBJECTS += $(OBJDIR)/Engine.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/FileUtils.o
OBJECTS += $(OBJDIR)/ImGui.o
OBJECTS += $(OBJDIR)/ImGuizmo.o
OBJECTS += $(OBJDIR)/InternalCalls.o
OBJECTS += $(OBJDIR)/LinuxError.o
OBJECTS += $(OBJDIR)/LinuxFileUtils.o
OBJECTS += $(OBJDIR)/LinuxInput.o
OBJECTS += $(OBJDIR)/LinuxWindow.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Math.o
OBJECTS += $(OBJDIR)/MonoUtils.o
OBJECTS += $(OBJDIR)/OldSceneDeserialization.o
OBJECTS += $(OBJDIR)/OpenGLBuffer.o
OBJECTS += $(OBJDIR)/OpenGLFrameBuffer.o
OBJECTS += $(OBJDIR)/OpenGLRenderer.o
OBJECTS += $(OBJDIR)/OpenGLShader.o
OBJECTS += $(OBJDIR)/OpenGLTexture.o
OBJECTS += $(OBJDIR)/OpenGLVertexArray.o
OBJECTS += $(OBJDIR)/Path.o
OBJECTS += $(OBJDIR)/Primitives.o
OBJECTS += $(OBJDIR)/Registry.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/ScriptComponent.o
OBJECTS += $(OBJDIR)/ScriptingCore.o
OBJECTS += $(OBJDIR)/Transform.o
OBJECTS += $(OBJDIR)/cupch.o
OBJECTS += $(OBJDIR)/stb_image.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Copper-Engine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Copper-Engine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/ImGuizmo.o: lib/ImGuizmo/ImGuizmo/ImGuizmo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: lib/stb/stb/stb_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: src/Engine/Components/Camera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScriptComponent.o: src/Engine/Components/ScriptComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Transform.o: src/Engine/Components/Transform.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Engine.o: src/Engine/Core/Engine.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Engine/Core/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Path.o: src/Engine/Filesystem/Path.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AxisManager.o: src/Engine/Input/AxisManager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Color.o: src/Engine/Renderer/Color.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Primitives.o: src/Engine/Renderer/Primitives.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Engine/Renderer/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/Engine/Scene/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OldSceneDeserialization.o: src/Engine/Scene/OldSceneDeserialization.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Registry.o: src/Engine/Scene/Registry.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/Engine/Scene/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/InternalCalls.o: src/Engine/Scripting/InternalCalls.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/MonoUtils.o: src/Engine/Scripting/MonoUtils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ScriptingCore.o: src/Engine/Scripting/ScriptingCore.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGui.o: src/Engine/UI/ImGui.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileUtils.o: src/Engine/Utilities/FileUtils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Math.o: src/Engine/Utilities/Math.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxError.o: src/Platform/Linux/LinuxError.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxFileUtils.o: src/Platform/Linux/LinuxFileUtils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxInput.o: src/Platform/Linux/LinuxInput.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxWindow.o: src/Platform/Linux/LinuxWindow.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLBuffer.o: src/Platform/OpenGL/OpenGLBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLFrameBuffer.o: src/Platform/OpenGL/OpenGLFrameBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLRenderer.o: src/Platform/OpenGL/OpenGLRenderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLShader.o: src/Platform/OpenGL/OpenGLShader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLTexture.o: src/Platform/OpenGL/OpenGLTexture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OpenGLVertexArray.o: src/Platform/OpenGL/OpenGLVertexArray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cupch.o: src/cupch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif